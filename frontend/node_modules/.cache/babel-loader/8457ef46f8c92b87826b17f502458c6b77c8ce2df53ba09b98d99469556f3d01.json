{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\SE_REVIEW\\\\SE_Group4\\\\frontend\\\\src\\\\pages\\\\UpdateGreaseProductForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateGreaseProductForm({\n  productId,\n  onUpdateProduct\n}) {\n  _s();\n  const [productData, setProductData] = useState(null);\n  useEffect(() => {\n    const fetchProduct = async () => {\n      const response = await fetch(`http://localhost:5000/api/grease/${productId}`);\n      const data = await response.json();\n      setProductData(data);\n    };\n    if (productId) {\n      fetchProduct();\n    }\n  }, [productId]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setProductData({\n      ...productData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/api/grease/${productId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(data.message || 'Product updated successfully!');\n        onUpdateProduct(); // Refresh products after update\n      } else {\n        const data = await response.json();\n        alert(data.error || 'Failed to update product');\n      }\n    } catch (error) {\n      alert('An error occurred while updating the product');\n    }\n  };\n  if (!productData) return null;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: productData.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"category\",\n      value: productData.category,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      value: productData.price,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"stock\",\n      value: productData.stock,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"image\",\n      value: productData.image,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Offer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"offer\",\n        checked: productData.offer,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateGreaseProductForm, \"GtIQx8V/uEiPV8lgPAcwSVmv3rM=\");\n_c = UpdateGreaseProductForm;\nexport default UpdateGreaseProductForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateGreaseProductForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateGreaseProductForm","productId","onUpdateProduct","_s","productData","setProductData","fetchProduct","response","fetch","data","json","handleChange","e","name","value","type","checked","target","handleSubmit","preventDefault","method","headers","body","JSON","stringify","ok","alert","message","error","onSubmit","children","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","category","price","stock","image","offer","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Desktop/SE_REVIEW/SE_Group4/frontend/src/pages/UpdateGreaseProductForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction UpdateGreaseProductForm({ productId, onUpdateProduct }) {\r\n    const [productData, setProductData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProduct = async () => {\r\n            const response = await fetch(`http://localhost:5000/api/grease/${productId}`);\r\n            const data = await response.json();\r\n            setProductData(data);\r\n        };\r\n\r\n        if (productId) {\r\n            fetchProduct();\r\n        }\r\n    }, [productId]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        setProductData({\r\n            ...productData,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/grease/${productId}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(productData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                alert(data.message || 'Product updated successfully!');\r\n                onUpdateProduct(); // Refresh products after update\r\n            } else {\r\n                const data = await response.json();\r\n                alert(data.error || 'Failed to update product');\r\n            }\r\n        } catch (error) {\r\n            alert('An error occurred while updating the product');\r\n        }\r\n    };\r\n\r\n    if (!productData) return null;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={productData.name}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"category\"\r\n                value={productData.category}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"price\"\r\n                value={productData.price}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"stock\"\r\n                value={productData.stock}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"image\"\r\n                value={productData.image}\r\n                onChange={handleChange}\r\n                required\r\n            />\r\n            <label>\r\n                Offer:\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"offer\"\r\n                    checked={productData.offer}\r\n                    onChange={handleChange}\r\n                />\r\n            </label>\r\n            <button type=\"submit\">Update Product</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UpdateGreaseProductForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}