{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\SE_REVIEW\\\\SE_Group4\\\\frontend\\\\src\\\\pages\\\\admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminLogin.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminLogin() {\n  _s();\n  // Security State Management\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [securityState, setSecurityState] = useState({\n    isLoading: false,\n    error: '',\n    attempts: 0,\n    isLocked: false,\n    lockTime: 0,\n    lastAttempt: null\n  });\n  const navigate = useNavigate();\n  const MAX_ATTEMPTS = 3;\n  const LOCKOUT_DURATION = 300; // 5 minutes in seconds\n\n  // Session Management\n  useEffect(() => {\n    const verifySession = async () => {\n      const token = sessionStorage.getItem('adminToken');\n      if (token) {\n        // Add token validation API call in production\n        navigate('/AdminDashboard');\n      }\n    };\n    verifySession();\n  }, [navigate]);\n\n  // Security Lockout System\n  useEffect(() => {\n    if (securityState.attempts >= MAX_ATTEMPTS) {\n      const lockTimer = setInterval(() => {\n        setSecurityState(prev => ({\n          ...prev,\n          lockTime: prev.lockTime > 0 ? prev.lockTime - 1 : 0,\n          isLocked: prev.lockTime > 0\n        }));\n      }, 1000);\n      return () => clearInterval(lockTimer);\n    }\n  }, [securityState.attempts, securityState.lockTime]);\n\n  // Security Handlers\n  const handleInputChange = (field, value) => {\n    // Basic XSS protection\n    const sanitizedValue = value.replace(/<[^>]*>?/gm, '');\n    setCredentials(prev => ({\n      ...prev,\n      [field]: sanitizedValue\n    }));\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (securityState.isLocked) {\n      setSecurityState(prev => ({\n        ...prev,\n        error: `Account locked. Try again in ${prev.lockTime} seconds.`\n      }));\n      return;\n    }\n    setSecurityState(prev => ({\n      ...prev,\n      isLoading: true,\n      error: ''\n    }));\n    try {\n      // Simulated API call with security delay\n      await new Promise(resolve => setTimeout(resolve, 1500 + Math.random() * 1000));\n      if (credentials.username === 'admin' && credentials.password === 'admin123') {\n        sessionStorage.setItem('adminToken', 'dummy-token'); // Use secure token in production\n        navigate('/AdminDashboard');\n      } else {\n        setSecurityState(prev => ({\n          ...prev,\n          attempts: prev.attempts + 1,\n          lockTime: prev.attempts + 1 >= MAX_ATTEMPTS ? LOCKOUT_DURATION : 0,\n          isLocked: prev.attempts + 1 >= MAX_ATTEMPTS,\n          error: 'Invalid credentials. Please try again.'\n        }));\n      }\n    } catch (err) {\n      setSecurityState(prev => ({\n        ...prev,\n        error: 'Security violation detected. Incident logged.'\n      }));\n      // Implement logging mechanism\n    } finally {\n      setSecurityState(prev => ({\n        ...prev,\n        isLoading: false\n      }));\n    }\n  };\n\n  // Security UI Helpers\n  const getSecurityStatus = () => {\n    if (securityState.isLocked) {\n      return `Account locked. Try again in ${securityState.lockTime} seconds.`;\n    }\n    if (securityState.attempts > 0) {\n      return `${MAX_ATTEMPTS - securityState.attempts} attempts remaining`;\n    }\n    return 'Secure admin portal';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"admin-login-title\",\n          children: [\"\\uD83D\\uDD12 Admin Portal\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"security-status\",\n            children: getSecurityStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"security-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ssl-badge\",\n            children: \"SSL Secured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"encryption-badge\",\n            children: \"AES-256 Encrypted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"admin-login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            placeholder: \"Enter admin username\",\n            value: credentials.username,\n            onChange: e => handleInputChange('username', e.target.value),\n            autoComplete: \"username\",\n            \"aria-label\": \"Admin username\",\n            className: securityState.error ? 'error' : '',\n            disabled: securityState.isLoading || securityState.isLocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: credentials.password,\n            onChange: e => handleInputChange('password', e.target.value),\n            autoComplete: \"current-password\",\n            \"aria-label\": \"Admin password\",\n            className: securityState.error ? 'error' : '',\n            disabled: securityState.isLoading || securityState.isLocked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), securityState.error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"security-alert-icon\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), securityState.error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"admin-login-button\",\n          disabled: securityState.isLoading || securityState.isLocked,\n          \"aria-label\": \"Login button\",\n          children: securityState.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"security-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Verifying Credentials...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : securityState.isLocked ? `üîê Locked (${securityState.lockTime}s)` : 'Secure Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"security-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"security-notice\",\n            children: \"All login attempts are monitored and logged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"version-info\",\n            children: \"v1.1.0 | Security Patch 2023.12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminLogin, \"hFmFfyewuqJe48ncOsochmIbWUU=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminLogin","_s","credentials","setCredentials","username","password","securityState","setSecurityState","isLoading","error","attempts","isLocked","lockTime","lastAttempt","navigate","MAX_ATTEMPTS","LOCKOUT_DURATION","verifySession","token","sessionStorage","getItem","lockTimer","setInterval","prev","clearInterval","handleInputChange","field","value","sanitizedValue","replace","handleLogin","e","preventDefault","Promise","resolve","setTimeout","Math","random","setItem","err","getSecurityStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","onChange","target","autoComplete","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Desktop/SE_REVIEW/SE_Group4/frontend/src/pages/admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminLogin.css';\r\nimport Navbar from './Navbar';\r\n\r\nfunction AdminLogin() {\r\n    // Security State Management\r\n    const [credentials, setCredentials] = useState({ username: '', password: '' });\r\n    const [securityState, setSecurityState] = useState({\r\n        isLoading: false,\r\n        error: '',\r\n        attempts: 0,\r\n        isLocked: false,\r\n        lockTime: 0,\r\n        lastAttempt: null\r\n    });\r\n    \r\n    const navigate = useNavigate();\r\n    const MAX_ATTEMPTS = 3;\r\n    const LOCKOUT_DURATION = 300; // 5 minutes in seconds\r\n\r\n    // Session Management\r\n    useEffect(() => {\r\n        const verifySession = async () => {\r\n            const token = sessionStorage.getItem('adminToken');\r\n            if (token) {\r\n                // Add token validation API call in production\r\n                navigate('/AdminDashboard');\r\n            }\r\n        };\r\n        verifySession();\r\n    }, [navigate]);\r\n\r\n    // Security Lockout System\r\n    useEffect(() => {\r\n        if (securityState.attempts >= MAX_ATTEMPTS) {\r\n            const lockTimer = setInterval(() => {\r\n                setSecurityState(prev => ({\r\n                    ...prev,\r\n                    lockTime: prev.lockTime > 0 ? prev.lockTime - 1 : 0,\r\n                    isLocked: prev.lockTime > 0\r\n                }));\r\n            }, 1000);\r\n\r\n            return () => clearInterval(lockTimer);\r\n        }\r\n    }, [securityState.attempts, securityState.lockTime]);\r\n\r\n    // Security Handlers\r\n    const handleInputChange = (field, value) => {\r\n        // Basic XSS protection\r\n        const sanitizedValue = value.replace(/<[^>]*>?/gm, '');\r\n        setCredentials(prev => ({ ...prev, [field]: sanitizedValue }));\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (securityState.isLocked) {\r\n            setSecurityState(prev => ({\r\n                ...prev,\r\n                error: `Account locked. Try again in ${prev.lockTime} seconds.`\r\n            }));\r\n            return;\r\n        }\r\n\r\n        setSecurityState(prev => ({ ...prev, isLoading: true, error: '' }));\r\n\r\n        try {\r\n            // Simulated API call with security delay\r\n            await new Promise(resolve => setTimeout(resolve, 1500 + Math.random() * 1000));\r\n            \r\n            if (credentials.username === 'admin' && credentials.password === 'admin123') {\r\n                sessionStorage.setItem('adminToken', 'dummy-token'); // Use secure token in production\r\n                navigate('/AdminDashboard');\r\n            } else {\r\n                setSecurityState(prev => ({\r\n                    ...prev,\r\n                    attempts: prev.attempts + 1,\r\n                    lockTime: prev.attempts + 1 >= MAX_ATTEMPTS ? LOCKOUT_DURATION : 0,\r\n                    isLocked: prev.attempts + 1 >= MAX_ATTEMPTS,\r\n                    error: 'Invalid credentials. Please try again.'\r\n                }));\r\n            }\r\n        } catch (err) {\r\n            setSecurityState(prev => ({\r\n                ...prev,\r\n                error: 'Security violation detected. Incident logged.'\r\n            }));\r\n            // Implement logging mechanism\r\n        } finally {\r\n            setSecurityState(prev => ({ ...prev, isLoading: false }));\r\n        }\r\n    };\r\n\r\n    // Security UI Helpers\r\n    const getSecurityStatus = () => {\r\n        if (securityState.isLocked) {\r\n            return `Account locked. Try again in ${securityState.lockTime} seconds.`;\r\n        }\r\n        if (securityState.attempts > 0) {\r\n            return `${MAX_ATTEMPTS - securityState.attempts} attempts remaining`;\r\n        }\r\n        return 'Secure admin portal';\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-login-container\">\r\n            <Navbar />\r\n            <div className=\"admin-login-card\">\r\n                <div className=\"security-header\">\r\n                    <h1 className=\"admin-login-title\">\r\n                        üîí Admin Portal\r\n                        <span className=\"security-status\">{getSecurityStatus()}</span>\r\n                    </h1>\r\n                    <div className=\"security-badge\">\r\n                        <span className=\"ssl-badge\">SSL Secured</span>\r\n                        <span className=\"encryption-badge\">AES-256 Encrypted</span>\r\n                    </div>\r\n                </div>\r\n                \r\n                <form onSubmit={handleLogin} className=\"admin-login-form\">\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter admin username\"\r\n                            value={credentials.username}\r\n                            onChange={(e) => handleInputChange('username', e.target.value)}\r\n                            autoComplete=\"username\"\r\n                            aria-label=\"Admin username\"\r\n                            className={securityState.error ? 'error' : ''}\r\n                            disabled={securityState.isLoading || securityState.isLocked}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            value={credentials.password}\r\n                            onChange={(e) => handleInputChange('password', e.target.value)}\r\n                            autoComplete=\"current-password\"\r\n                            aria-label=\"Admin password\"\r\n                            className={securityState.error ? 'error' : ''}\r\n                            disabled={securityState.isLoading || securityState.isLocked}\r\n                        />\r\n                    </div>\r\n                    \r\n                    {securityState.error && (\r\n                        <div className=\"error-message\">\r\n                            <span className=\"security-alert-icon\">‚ö†Ô∏è</span>\r\n                            {securityState.error}\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"admin-login-button\"\r\n                        disabled={securityState.isLoading || securityState.isLocked}\r\n                        aria-label=\"Login button\"\r\n                    >\r\n                        {securityState.isLoading ? (\r\n                            <>\r\n                                <span className=\"security-spinner\"></span>\r\n                                <span>Verifying Credentials...</span>\r\n                            </>\r\n                        ) : securityState.isLocked ? (\r\n                            `üîê Locked (${securityState.lockTime}s)`\r\n                        ) : (\r\n                            'Secure Login'\r\n                        )}\r\n                    </button>\r\n\r\n                    <div className=\"security-footer\">\r\n                        <p className=\"security-notice\">\r\n                            All login attempts are monitored and logged\r\n                        </p>\r\n                        <p className=\"version-info\">v1.1.0 | Security Patch 2023.12</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}