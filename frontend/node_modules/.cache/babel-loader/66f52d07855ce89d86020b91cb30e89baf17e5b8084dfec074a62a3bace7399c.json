{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\SE_REVIEW\\\\SE_Group4\\\\frontend\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SignUp.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false); // Track OTP sent state\n  const [password, setPassword] = useState('');\n  const [isOtpVerified, setIsOtpVerified] = useState(false); // Track OTP verification status\n  const navigate = useNavigate();\n\n  // Handle sending OTP\n  const handleSendOtp = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setOtpSent(true); // OTP sent successfully\n      } else {\n        alert(data.error);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Handle OTP verification\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert('OTP Verified!');\n        setIsOtpVerified(true); // OTP is verified, move to password submission\n      } else {\n        alert(data.error);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Handle password submission after OTP verification\n  const handlePasswordSubmit = e => {\n    e.preventDefault();\n    if (password) {\n      // If password is provided, redirect to the dashboard\n      alert('Password Submitted!');\n      navigate('/Home'); // Redirect to the dashboard after password submission\n    } else {\n      alert('Please enter a password!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !otpSent ?\n      /*#__PURE__*/\n      // Send OTP button\n      _jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        className: \"send-otp-button\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // OTP input and verification\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerifyOtp,\n          className: \"verify-otp-button\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isOtpVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePasswordSubmit,\n          className: \"submit-password-button\",\n          children: \"Submit Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"bCThV5XOMPVo/WNs/v53akArlQE=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","email","setEmail","otp","setOtp","otpSent","setOtpSent","password","setPassword","isOtpVerified","setIsOtpVerified","navigate","handleSendOtp","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","error","err","console","handleVerifyOtp","handlePasswordSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Desktop/SE_REVIEW/SE_Group4/frontend/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './SignUp.css';  // Import your CSS file\r\n\r\nfunction SignUp() {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);  // Track OTP sent state\r\n  const [password, setPassword] = useState('');\r\n  const [isOtpVerified, setIsOtpVerified] = useState(false); // Track OTP verification status\r\n  const navigate = useNavigate();\r\n\r\n  // Handle sending OTP\r\n  const handleSendOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/send-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setOtpSent(true);  // OTP sent successfully\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Handle OTP verification\r\n  const handleVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/verify-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert('OTP Verified!');\r\n        setIsOtpVerified(true); // OTP is verified, move to password submission\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Handle password submission after OTP verification\r\n  const handlePasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password) {\r\n      // If password is provided, redirect to the dashboard\r\n      alert('Password Submitted!');\r\n      navigate('/Home');  // Redirect to the dashboard after password submission\r\n    } else {\r\n      alert('Please enter a password!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-page\">\r\n      <form className=\"signup-form\">\r\n        <h2>Sign Up</h2>\r\n\r\n        {/* Email input */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {!otpSent ? (\r\n          // Send OTP button\r\n          <button onClick={handleSendOtp} className=\"send-otp-button\">\r\n            Send OTP\r\n          </button>\r\n        ) : (\r\n          // OTP input and verification\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              required\r\n            />\r\n            <button onClick={handleVerifyOtp} className=\"verify-otp-button\">\r\n              Verify OTP\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {/* After OTP is verified, show password input */}\r\n        {isOtpVerified && (\r\n          <div className=\"password-section\">\r\n            <h3>Enter Your Password</h3>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button onClick={handlePasswordSubmit} className=\"submit-password-button\">\r\n              Submit Password\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}