{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./SignUp.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function SignUp(){const[name,setName]=useState('');// ðŸ†• name field\nconst[email,setEmail]=useState('');const[otp,setOtp]=useState('');const[otpSent,setOtpSent]=useState(false);const[password,setPassword]=useState('');const[isOtpVerified,setIsOtpVerified]=useState(false);const navigate=useNavigate();// Handle sending OTP\nconst handleSendOtp=async e=>{e.preventDefault();try{const response=await fetch('http://localhost:5000/api/auth/send-otp',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});const data=await response.json();if(response.ok){setOtpSent(true);// OTP sent successfully\n}else{alert(data.message);}}catch(err){console.error(err);}};// Handle OTP verification\nconst handleVerifyOtp=async e=>{e.preventDefault();try{const response=await fetch('http://localhost:5000/api/auth/verify-otp',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,otp})});const data=await response.json();if(response.ok){alert('OTP Verified!');setIsOtpVerified(true);// OTP verified, allow password input\n}else{alert(data.message);}}catch(err){console.error(err);}};// Handle password submission and register user\nconst handlePasswordSubmit=async e=>{e.preventDefault();if(!name||!email||!password){alert('Please fill in all the required fields!');return;}try{const response=await fetch('http://localhost:5000/api/auth/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,email,password})// âœ… include name\n});const data=await response.json();if(response.ok){alert('User registered successfully!');navigate('/Home');// Redirect to home\n}else{alert(data.message);}}catch(err){console.error(err);}};return/*#__PURE__*/_jsx(\"div\",{className:\"signup-page\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"signup-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Full Name\",value:name,onChange:e=>setName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),!otpSent?/*#__PURE__*/_jsx(\"button\",{onClick:handleSendOtp,className:\"send-otp-button\",children:\"Send OTP\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerifyOtp,className:\"verify-otp-button\",children:\"Verify OTP\"})]}),isOtpVerified&&/*#__PURE__*/_jsxs(\"div\",{className:\"password-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enter Your Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handlePasswordSubmit,className:\"submit-password-button\",children:\"Submit Password\"})]})]})});}export default SignUp;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SignUp","name","setName","email","setEmail","otp","setOtp","otpSent","setOtpSent","password","setPassword","isOtpVerified","setIsOtpVerified","navigate","handleSendOtp","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","err","console","error","handleVerifyOtp","handlePasswordSubmit","className","children","type","placeholder","value","onChange","target","required","onClick"],"sources":["C:/Users/Acer/Desktop/SE_REVIEW/SE_Group4/frontend/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './SignUp.css';\r\n\r\nfunction SignUp() {\r\n  const [name, setName] = useState(''); // ðŸ†• name field\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle sending OTP\r\n  const handleSendOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/send-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setOtpSent(true); // OTP sent successfully\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Handle OTP verification\r\n  const handleVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/verify-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert('OTP Verified!');\r\n        setIsOtpVerified(true); // OTP verified, allow password input\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Handle password submission and register user\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!name || !email || !password) {\r\n      alert('Please fill in all the required fields!');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password }), // âœ… include name\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert('User registered successfully!');\r\n        navigate('/Home'); // Redirect to home\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-page\">\r\n      <form className=\"signup-form\">\r\n        <h2>Sign Up</h2>\r\n\r\n        {/* Name input */}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {/* Email input */}\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        {/* OTP section */}\r\n        {!otpSent ? (\r\n          <button onClick={handleSendOtp} className=\"send-otp-button\">\r\n            Send OTP\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter OTP\"\r\n              value={otp}\r\n              onChange={(e) => setOtp(e.target.value)}\r\n              required\r\n            />\r\n            <button onClick={handleVerifyOtp} className=\"verify-otp-button\">\r\n              Verify OTP\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {/* Password section (only after OTP is verified) */}\r\n        {isOtpVerified && (\r\n          <div className=\"password-section\">\r\n            <h3>Enter Your Password</h3>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={handlePasswordSubmit}\r\n              className=\"submit-password-button\"\r\n            >\r\n              Submit Password\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}